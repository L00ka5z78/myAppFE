Index: src/components/TaskElement.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { deleteTask } from '../apiCalls/task.calls';\r\n\r\nexport const TaskElement = ({ prevTask }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const handleDelete = async (e) => {\r\n    if (window.confirm('Are you sure you want to delete this task?')) {\r\n      const response = await deleteTask(prevTask._id);\r\n      if (response.status === 200) {\r\n        alert(response.data.message);\r\n        window.location.reload();\r\n        // navigate('/user/profile'); // i must decide what is better\r\n      } else {\r\n        alert(response.response.data.msg);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className=\"border px-4 py-2\">{prevTask.title}</td>\r\n      <td className=\"border px-4 py-2\">{prevTask.description}</td>\r\n      <td className=\"border px-4 py-2\">\r\n        {prevTask.completed ? 'Completed' : 'Not yet...'}\r\n      </td>\r\n      <td className=\"border px-4 py-2\">\r\n        <button\r\n          onClick={() => navigate(`/todo/view/${prevTask._id}`)}\r\n          className=\"bg-blue-700 text-white px-2 rounded\"\r\n        >\r\n          View\r\n        </button>\r\n      </td>\r\n      <td className=\"border px-4 py-2\">\r\n        <button\r\n          onClick={() => navigate(`/todo/update/${prevTask._id}`)}\r\n          className=\"bg-green-600 text-white px-2 rounded\"\r\n        >\r\n          Update\r\n        </button>\r\n      </td>\r\n      <td className=\"border px-4 py-2\">\r\n        <button\r\n          onClick={handleDelete}\r\n          className=\"bg-red-500 text-white px-2 rounded\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n/**delete works, but it doesnt refresh page, and it throws error in console unauthorized, check and try to figure it out and fix */\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/TaskElement.jsx b/src/components/TaskElement.jsx
--- a/src/components/TaskElement.jsx	
+++ b/src/components/TaskElement.jsx	
@@ -1,55 +1,55 @@
 import React from 'react';
-import { useNavigate } from 'react-router-dom';
-import { deleteTask } from '../apiCalls/task.calls';
+import {useNavigate} from 'react-router-dom';
+import {deleteTask} from '../apiCalls/task.calls';
 
-export const TaskElement = ({ prevTask }) => {
-  const navigate = useNavigate();
+export const TaskElement = ({prevTask}) => {
+    const navigate = useNavigate();
 
-  const handleDelete = async (e) => {
-    if (window.confirm('Are you sure you want to delete this task?')) {
-      const response = await deleteTask(prevTask._id);
-      if (response.status === 200) {
-        alert(response.data.message);
-        window.location.reload();
-        // navigate('/user/profile'); // i must decide what is better
-      } else {
-        alert(response.response.data.msg);
-      }
-    }
-  };
+    const handleDelete = async (e) => {
+        if (window.confirm('Are you sure you want to delete this task?')) {
+            const response = await deleteTask(prevTask._id);
+            if (response.status === 200) {
+                alert(response.data.message);
+                window.location.reload();
+                // navigate('/user/profile'); // i must decide what is better
+            } else {
+                alert(response.response.data.msg);
+            }
+        }
+    };
 
-  return (
-    <tr>
-      <td className="border px-4 py-2">{prevTask.title}</td>
-      <td className="border px-4 py-2">{prevTask.description}</td>
-      <td className="border px-4 py-2">
-        {prevTask.completed ? 'Completed' : 'Not yet...'}
-      </td>
-      <td className="border px-4 py-2">
-        <button
-          onClick={() => navigate(`/todo/view/${prevTask._id}`)}
-          className="bg-blue-700 text-white px-2 rounded"
-        >
-          View
-        </button>
-      </td>
-      <td className="border px-4 py-2">
-        <button
-          onClick={() => navigate(`/todo/update/${prevTask._id}`)}
-          className="bg-green-600 text-white px-2 rounded"
-        >
-          Update
-        </button>
-      </td>
-      <td className="border px-4 py-2">
-        <button
-          onClick={handleDelete}
-          className="bg-red-500 text-white px-2 rounded"
-        >
-          Delete
-        </button>
-      </td>
-    </tr>
-  );
+    return (
+        <tr>
+            <td className="border px-4 py-2">{prevTask.title}</td>
+            <td className="border px-4 py-2">{prevTask.description}</td>
+            <td className="border px-4 py-2">
+                {prevTask.completed ? 'Completed' : 'Not yet...'}
+            </td>
+            <td className="border px-4 py-2">
+                <button
+                    onClick={() => navigate(`/todo/view/${prevTask._id}`)}
+                    className="bg-blue-700 text-white px-2 rounded"
+                >
+                    View
+                </button>
+            </td>
+            <td className="border px-4 py-2">
+                <button
+                    onClick={() => navigate(`/todo/update/${prevTask._id}`)}
+                    className="bg-green-600 text-white px-2 rounded"
+                >
+                    Update
+                </button>
+            </td>
+            <td className="border px-4 py-2">
+                <button
+                    onClick={handleDelete}
+                    className="bg-red-500 text-white px-2 rounded"
+                >
+                    Delete
+                </button>
+            </td>
+        </tr>
+    );
 };
 /**delete works, but it doesnt refresh page, and it throws error in console unauthorized, check and try to figure it out and fix */
Index: src/components/Navbar.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const Navbar = ({ user }) => {\r\n  return (\r\n    <nav className=\"bg-black py-3 text-white flex items-center justify-between  \">\r\n      <h1 className=\"ml-1 font-bold text-2xl\">\r\n        Things I want to do before I die\r\n      </h1>\r\n      <ul className=\"flex\">\r\n        {user._id && (\r\n          <>\r\n            <li className=\"mr-3\">\r\n              <Link className=\"hover:text-pink-500\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"mr-3\">\r\n              <Link className=\"hover:text-pink-500\" to=\"/todo/create\">\r\n                Add task\r\n              </Link>\r\n            </li>\r\n            <li className=\"mr-3\">\r\n              <Link className=\"hover:text-pink-500\" to=\"user/profile\">\r\n                Profile\r\n              </Link>\r\n            </li>\r\n          </>\r\n        )}\r\n        {!user._id && (\r\n          <>\r\n            <li className=\"mr-3\">\r\n              <Link className=\"hover:text-pink-500\" to=\"user/register\">\r\n                Register\r\n              </Link>\r\n            </li>\r\n            <li className=\"mr-3\">\r\n              <Link className=\"hover:text-pink-500\" to=\"user/login\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n          </>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/Navbar.jsx b/src/components/Navbar.jsx
--- a/src/components/Navbar.jsx	
+++ b/src/components/Navbar.jsx	
@@ -1,47 +1,47 @@
 import React from 'react';
-import { Link } from 'react-router-dom';
+import {Link} from 'react-router-dom';
 
-export const Navbar = ({ user }) => {
-  return (
-    <nav className="bg-black py-3 text-white flex items-center justify-between  ">
-      <h1 className="ml-1 font-bold text-2xl">
-        Things I want to do before I die
-      </h1>
-      <ul className="flex">
-        {user._id && (
-          <>
-            <li className="mr-3">
-              <Link className="hover:text-pink-500" to="/">
-                Home
-              </Link>
-            </li>
-            <li className="mr-3">
-              <Link className="hover:text-pink-500" to="/todo/create">
-                Add task
-              </Link>
-            </li>
-            <li className="mr-3">
-              <Link className="hover:text-pink-500" to="user/profile">
-                Profile
-              </Link>
-            </li>
-          </>
-        )}
-        {!user._id && (
-          <>
-            <li className="mr-3">
-              <Link className="hover:text-pink-500" to="user/register">
-                Register
-              </Link>
-            </li>
-            <li className="mr-3">
-              <Link className="hover:text-pink-500" to="user/login">
-                Login
-              </Link>
-            </li>
-          </>
-        )}
-      </ul>
-    </nav>
-  );
+export const Navbar = ({user}) => {
+    return (
+        <nav className="bg-black py-3 text-white flex items-center justify-between  ">
+            <h1 className="ml-1 font-bold text-2xl">
+                Things I want to do before I die
+            </h1>
+            <ul className="flex">
+                {user._id && (
+                    <>
+                        <li className="mr-3">
+                            <Link className="hover:text-pink-500" to="/">
+                                Home
+                            </Link>
+                        </li>
+                        <li className="mr-3">
+                            <Link className="hover:text-pink-500" to="/todo/create">
+                                Add task
+                            </Link>
+                        </li>
+                        <li className="mr-3">
+                            <Link className="hover:text-pink-500" to="user/profile">
+                                Profile
+                            </Link>
+                        </li>
+                    </>
+                )}
+                {!user._id && (
+                    <>
+                        <li className="mr-3">
+                            <Link className="hover:text-pink-500" to="user/register">
+                                Register
+                            </Link>
+                        </li>
+                        <li className="mr-3">
+                            <Link className="hover:text-pink-500" to="user/login">
+                                Login
+                            </Link>
+                        </li>
+                    </>
+                )}
+            </ul>
+        </nav>
+    );
 };
Index: src/components/TaskList.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useContext, useEffect } from 'react';\r\nimport { getTasks } from '../apiCalls/task.calls';\r\nimport { TaskContext } from '../context/TaskContext';\r\nimport { TaskElement } from './TaskElement';\r\n\r\nexport const TaskList = () => {\r\n  const { task, setTask } = useContext(TaskContext);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getTasks();\r\n      if (response.status === 200) {\r\n        setTask(response.data.todos);\r\n      } else {\r\n        alert(response.response.data.msg);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <table className=\"table-auto w-full\">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"border px-4 py-2\">Title</th>\r\n          <th className=\"border px-4 py-2\">Description</th>\r\n          <th className=\"border px-4 py-2\">Completed</th>\r\n          <th className=\"border px-4 py-2\">View</th>\r\n          <th className=\"border px-4 py-2\">Update</th>\r\n          <th className=\"border px-4 py-2\">Delete</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {task.length > 0 &&\r\n          task.map((prevTask) => {\r\n            return <TaskElement key={prevTask._id} prevTask={prevTask} />;\r\n          })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/TaskList.jsx b/src/components/TaskList.jsx
--- a/src/components/TaskList.jsx	
+++ b/src/components/TaskList.jsx	
@@ -1,41 +1,41 @@
-import React, { useContext, useEffect } from 'react';
-import { getTasks } from '../apiCalls/task.calls';
-import { TaskContext } from '../context/TaskContext';
-import { TaskElement } from './TaskElement';
+import React, {useContext, useEffect} from 'react';
+import {getTasks} from '../apiCalls/task.calls';
+import {TaskContext} from '../context/TaskContext';
+import {TaskElement} from './TaskElement';
 
 export const TaskList = () => {
-  const { task, setTask } = useContext(TaskContext);
+    const {task, setTask} = useContext(TaskContext);
 
-  useEffect(() => {
-    const fetchData = async () => {
-      const response = await getTasks();
-      if (response.status === 200) {
-        setTask(response.data.todos);
-      } else {
-        alert(response.response.data.msg);
-      }
-    };
-    fetchData();
-  }, []);
+    useEffect(() => {
+        const fetchData = async () => {
+            const response = await getTasks();
+            if (response.status === 200) {
+                setTask(response.data.todos);
+            } else {
+                alert(response.response.data.msg);
+            }
+        };
+        fetchData();
+    }, []);
 
-  return (
-    <table className="table-auto w-full">
-      <thead>
-        <tr>
-          <th className="border px-4 py-2">Title</th>
-          <th className="border px-4 py-2">Description</th>
-          <th className="border px-4 py-2">Completed</th>
-          <th className="border px-4 py-2">View</th>
-          <th className="border px-4 py-2">Update</th>
-          <th className="border px-4 py-2">Delete</th>
-        </tr>
-      </thead>
-      <tbody>
-        {task.length > 0 &&
-          task.map((prevTask) => {
-            return <TaskElement key={prevTask._id} prevTask={prevTask} />;
-          })}
-      </tbody>
-    </table>
-  );
+    return (
+        <table className="table-auto w-full">
+            <thead>
+            <tr>
+                <th className="border px-4 py-2">Title</th>
+                <th className="border px-4 py-2">Description</th>
+                <th className="border px-4 py-2">Completed</th>
+                <th className="border px-4 py-2">View</th>
+                <th className="border px-4 py-2">Update</th>
+                <th className="border px-4 py-2">Delete</th>
+            </tr>
+            </thead>
+            <tbody>
+            {task.length > 0 &&
+                task.map((prevTask) => {
+                    return <TaskElement key={prevTask._id} prevTask={prevTask}/>;
+                })}
+            </tbody>
+        </table>
+    );
 };
Index: src/App.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useEffect, useContext } from 'react';\r\nimport './App.css';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport { Navbar } from './components/Navbar';\r\nimport { Home } from './components/pages/Home';\r\nimport { Register } from './components/pages/Register';\r\nimport { Profile } from './components/pages/Profile';\r\nimport { Login } from './components/pages/Login';\r\nimport { UserContext } from './context/UserContext';\r\nimport { getUser } from './apiCalls/user.calls';\r\nimport { LoggedInHome } from './components/pages/LoggedInHome';\r\nimport { NotProtectedRoutes } from './components/NotProtectedRoutes';\r\nimport { ProtectedRoutes } from './components/ProtectedRoutes';\r\nimport { AddTask } from './components/pages/AddTask';\r\nimport { UpdateProfile } from './components/pages/UpdateProfile';\r\nimport { UpdatePassword } from './components/pages/UpdatePassword';\r\nimport { ViewTask } from './components/pages/ViewTask';\r\nimport { UpdateTask } from './components/pages/UpdateTask';\r\nimport { Footer } from './components/Footer';\r\n\r\nexport const App = () => {\r\n  const { user, setUser } = useContext(UserContext);\r\n\r\n  //avoid to reset logged in user data after page is refreshed\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await getUser();\r\n      setUser(res.data.user);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App bg-gradient-to-r from-cyan-400 via-purple-700 to-red-700 \">\r\n      <Navbar user={user} />\r\n      <Routes>\r\n        <Route path=\"/\" element={user._id ? <LoggedInHome /> : <Home />} />\r\n        <Route\r\n          path=\"/user/register\"\r\n          element={\r\n            <NotProtectedRoutes loggedIn={user._id ? true : false}>\r\n              <Register />\r\n            </NotProtectedRoutes>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/user/login\"\r\n          element={\r\n            <NotProtectedRoutes loggedIn={user._id ? true : false}>\r\n              <Login />\r\n            </NotProtectedRoutes>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/user/profile\"\r\n          element={\r\n            <ProtectedRoutes loggedIn={user._id ? true : false}>\r\n              <Profile />\r\n            </ProtectedRoutes>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/todo/create\"\r\n          element={\r\n            <ProtectedRoutes loggedIn={user._id ? true : false}>\r\n              <AddTask />\r\n            </ProtectedRoutes>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/user/update\"\r\n          element={\r\n            <ProtectedRoutes loggedIn={user._id ? true : false}>\r\n              <UpdateProfile />\r\n            </ProtectedRoutes>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/user/updatepassword\"\r\n          element={\r\n            <ProtectedRoutes loggedIn={user._id ? true : false}>\r\n              <UpdatePassword />\r\n            </ProtectedRoutes>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/todo/view/:id\"\r\n          element={\r\n            <ProtectedRoutes loggedIn={user._id ? true : false}>\r\n              <ViewTask />\r\n            </ProtectedRoutes>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/todo/update/:id\"\r\n          element={\r\n            <ProtectedRoutes loggedIn={user._id ? true : false}>\r\n              <UpdateTask />\r\n            </ProtectedRoutes>\r\n          }\r\n        />\r\n      </Routes>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/App.jsx b/src/App.jsx
--- a/src/App.jsx	
+++ b/src/App.jsx	
@@ -1,106 +1,106 @@
-import React, { useEffect, useContext } from 'react';
+import React, {useEffect, useContext} from 'react';
 import './App.css';
-import { Routes, Route } from 'react-router-dom';
-import { Navbar } from './components/Navbar';
-import { Home } from './components/pages/Home';
-import { Register } from './components/pages/Register';
-import { Profile } from './components/pages/Profile';
-import { Login } from './components/pages/Login';
-import { UserContext } from './context/UserContext';
-import { getUser } from './apiCalls/user.calls';
-import { LoggedInHome } from './components/pages/LoggedInHome';
-import { NotProtectedRoutes } from './components/NotProtectedRoutes';
-import { ProtectedRoutes } from './components/ProtectedRoutes';
-import { AddTask } from './components/pages/AddTask';
-import { UpdateProfile } from './components/pages/UpdateProfile';
-import { UpdatePassword } from './components/pages/UpdatePassword';
-import { ViewTask } from './components/pages/ViewTask';
-import { UpdateTask } from './components/pages/UpdateTask';
-import { Footer } from './components/Footer';
+import {Routes, Route} from 'react-router-dom';
+import {Navbar} from './components/Navbar';
+import {Home} from './components/pages/Home';
+import {Register} from './components/pages/Register';
+import {Profile} from './components/pages/Profile';
+import {Login} from './components/pages/Login';
+import {UserContext} from './context/UserContext';
+import {getUser} from './apiCalls/user.calls';
+import {LoggedInHome} from './components/pages/LoggedInHome';
+import {NotProtectedRoutes} from './components/NotProtectedRoutes';
+import {ProtectedRoutes} from './components/ProtectedRoutes';
+import {AddTask} from './components/pages/AddTask';
+import {UpdateProfile} from './components/pages/UpdateProfile';
+import {UpdatePassword} from './components/pages/UpdatePassword';
+import {ViewTask} from './components/pages/ViewTask';
+import {UpdateTask} from './components/pages/UpdateTask';
+import {Footer} from './components/Footer';
 
 export const App = () => {
-  const { user, setUser } = useContext(UserContext);
+    const {user, setUser} = useContext(UserContext);
 
-  //avoid to reset logged in user data after page is refreshed
-  useEffect(() => {
-    const fetchData = async () => {
-      const res = await getUser();
-      setUser(res.data.user);
-    };
-    fetchData();
-  }, []);
+    //avoid to reset logged in user data after page is refreshed
+    useEffect(() => {
+        const fetchData = async () => {
+            const res = await getUser();
+            setUser(res.data.user);
+        };
+        fetchData();
+    }, []);
 
-  return (
-    <div className="App bg-gradient-to-r from-cyan-400 via-purple-700 to-red-700 ">
-      <Navbar user={user} />
-      <Routes>
-        <Route path="/" element={user._id ? <LoggedInHome /> : <Home />} />
-        <Route
-          path="/user/register"
-          element={
-            <NotProtectedRoutes loggedIn={user._id ? true : false}>
-              <Register />
-            </NotProtectedRoutes>
-          }
-        />
-        <Route
-          path="/user/login"
-          element={
-            <NotProtectedRoutes loggedIn={user._id ? true : false}>
-              <Login />
-            </NotProtectedRoutes>
-          }
-        />
-        <Route
-          path="/user/profile"
-          element={
-            <ProtectedRoutes loggedIn={user._id ? true : false}>
-              <Profile />
-            </ProtectedRoutes>
-          }
-        />
-        <Route
-          path="/todo/create"
-          element={
-            <ProtectedRoutes loggedIn={user._id ? true : false}>
-              <AddTask />
-            </ProtectedRoutes>
-          }
-        />
-        <Route
-          path="/user/update"
-          element={
-            <ProtectedRoutes loggedIn={user._id ? true : false}>
-              <UpdateProfile />
-            </ProtectedRoutes>
-          }
-        />
-        <Route
-          path="/user/updatepassword"
-          element={
-            <ProtectedRoutes loggedIn={user._id ? true : false}>
-              <UpdatePassword />
-            </ProtectedRoutes>
-          }
-        />
-        <Route
-          path="/todo/view/:id"
-          element={
-            <ProtectedRoutes loggedIn={user._id ? true : false}>
-              <ViewTask />
-            </ProtectedRoutes>
-          }
-        />
-        <Route
-          path="/todo/update/:id"
-          element={
-            <ProtectedRoutes loggedIn={user._id ? true : false}>
-              <UpdateTask />
-            </ProtectedRoutes>
-          }
-        />
-      </Routes>
-      <Footer />
-    </div>
-  );
+    return (
+        <div className="App bg-gradient-to-r from-cyan-400 via-purple-700 to-red-700 ">
+            <Navbar user={user}/>
+            <Routes>
+                <Route path="/" element={user._id ? <LoggedInHome/> : <Home/>}/>
+                <Route
+                    path="/user/register"
+                    element={
+                        <NotProtectedRoutes loggedIn={user._id ? true : false}>
+                            <Register/>
+                        </NotProtectedRoutes>
+                    }
+                />
+                <Route
+                    path="/user/login"
+                    element={
+                        <NotProtectedRoutes loggedIn={user._id ? true : false}>
+                            <Login/>
+                        </NotProtectedRoutes>
+                    }
+                />
+                <Route
+                    path="/user/profile"
+                    element={
+                        <ProtectedRoutes loggedIn={user._id ? true : false}>
+                            <Profile/>
+                        </ProtectedRoutes>
+                    }
+                />
+                <Route
+                    path="/todo/create"
+                    element={
+                        <ProtectedRoutes loggedIn={user._id ? true : false}>
+                            <AddTask/>
+                        </ProtectedRoutes>
+                    }
+                />
+                <Route
+                    path="/user/update"
+                    element={
+                        <ProtectedRoutes loggedIn={user._id ? true : false}>
+                            <UpdateProfile/>
+                        </ProtectedRoutes>
+                    }
+                />
+                <Route
+                    path="/user/updatepassword"
+                    element={
+                        <ProtectedRoutes loggedIn={user._id ? true : false}>
+                            <UpdatePassword/>
+                        </ProtectedRoutes>
+                    }
+                />
+                <Route
+                    path="/todo/view/:id"
+                    element={
+                        <ProtectedRoutes loggedIn={user._id ? true : false}>
+                            <ViewTask/>
+                        </ProtectedRoutes>
+                    }
+                />
+                <Route
+                    path="/todo/update/:id"
+                    element={
+                        <ProtectedRoutes loggedIn={user._id ? true : false}>
+                            <UpdateTask/>
+                        </ProtectedRoutes>
+                    }
+                />
+            </Routes>
+            <Footer/>
+        </div>
+    );
 };
Index: src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport { App } from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { UserContextProvider } from './context/UserContext'\r\nimport { TaskContextProvider } from './context/TaskContext';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n\r\n  <React.StrictMode>\r\n    <UserContextProvider>\r\n      <TaskContextProvider>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </TaskContextProvider>\r\n    </UserContextProvider>\r\n  </React.StrictMode>\r\n\r\n);\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/index.js b/src/index.js
--- a/src/index.js	
+++ b/src/index.js	
@@ -1,23 +1,21 @@
 import React from 'react';
 import ReactDOM from 'react-dom/client';
 import './index.css';
-import { App } from './App';
-import { BrowserRouter } from 'react-router-dom';
-import { UserContextProvider } from './context/UserContext'
-import { TaskContextProvider } from './context/TaskContext';
+import {App} from './App';
+import {BrowserRouter} from 'react-router-dom';
+import {UserContextProvider} from './context/UserContext'
+import {TaskContextProvider} from './context/TaskContext';
 
 const root = ReactDOM.createRoot(document.getElementById('root'));
 root.render(
-
-  <React.StrictMode>
-    <UserContextProvider>
-      <TaskContextProvider>
-        <BrowserRouter>
-          <App />
-        </BrowserRouter>
-      </TaskContextProvider>
-    </UserContextProvider>
-  </React.StrictMode>
-
+    <React.StrictMode>
+        <UserContextProvider>
+            <TaskContextProvider>
+                <BrowserRouter>
+                    <App/>
+                </BrowserRouter>
+            </TaskContextProvider>
+        </UserContextProvider>
+    </React.StrictMode>
 );
 
Index: src/components/NotProtectedRoutes.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Navigate } from 'react-router-dom';\r\n\r\nexport const NotProtectedRoutes = ({ loggedIn, children }) => {\r\n  if (loggedIn) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n  return children;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/NotProtectedRoutes.jsx b/src/components/NotProtectedRoutes.jsx
--- a/src/components/NotProtectedRoutes.jsx	
+++ b/src/components/NotProtectedRoutes.jsx	
@@ -1,8 +1,8 @@
-import { Navigate } from 'react-router-dom';
+import {Navigate} from 'react-router-dom';
 
-export const NotProtectedRoutes = ({ loggedIn, children }) => {
-  if (loggedIn) {
-    return <Navigate to="/" replace />;
-  }
-  return children;
+export const NotProtectedRoutes = ({loggedIn, children}) => {
+    if (loggedIn) {
+        return <Navigate to="/" replace/>;
+    }
+    return children;
 };
Index: src/context/UserContext.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, createContext } from 'react';\r\n\r\nexport const UserContext = createContext({ user: {}, setUser: () => {} });\r\n\r\nexport const UserContextProvider = ({ children }) => {\r\n  const [user, setUser] = useState({});\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/context/UserContext.jsx b/src/context/UserContext.jsx
--- a/src/context/UserContext.jsx	
+++ b/src/context/UserContext.jsx	
@@ -1,12 +1,15 @@
-import React, { useState, createContext } from 'react';
+import React, {useState, createContext} from 'react';
 
-export const UserContext = createContext({ user: {}, setUser: () => {} });
+export const UserContext = createContext({
+    user: {}, setUser: () => {
+    }
+});
 
-export const UserContextProvider = ({ children }) => {
-  const [user, setUser] = useState({});
-  return (
-    <UserContext.Provider value={{ user, setUser }}>
-      {children}
-    </UserContext.Provider>
-  );
+export const UserContextProvider = ({children}) => {
+    const [user, setUser] = useState({});
+    return (
+        <UserContext.Provider value={{user, setUser}}>
+            {children}
+        </UserContext.Provider>
+    );
 };
Index: src/components/ProtectedRoutes.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport const ProtectedRoutes = ({ loggedIn, children }) => {\r\n  if (!loggedIn) {\r\n    return <Navigate to=\"/user/login\" replace />;\r\n  }\r\n  return children;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/components/ProtectedRoutes.jsx b/src/components/ProtectedRoutes.jsx
--- a/src/components/ProtectedRoutes.jsx	
+++ b/src/components/ProtectedRoutes.jsx	
@@ -1,9 +1,9 @@
 import React from 'react';
-import { Navigate } from 'react-router-dom';
+import {Navigate} from 'react-router-dom';
 
-export const ProtectedRoutes = ({ loggedIn, children }) => {
-  if (!loggedIn) {
-    return <Navigate to="/user/login" replace />;
-  }
-  return children;
+export const ProtectedRoutes = ({loggedIn, children}) => {
+    if (!loggedIn) {
+        return <Navigate to="/user/login" replace/>;
+    }
+    return children;
 };
Index: src/context/TaskContext.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState, createContext } from 'react';\r\n\r\nexport const TaskContext = createContext({ task: {}, setUser: () => {} });\r\n\r\nexport const TaskContextProvider = ({ children }) => {\r\n  const [task, setTask] = useState({});\r\n  return (\r\n    <TaskContext.Provider value={{ task, setTask }}>\r\n      {children}\r\n    </TaskContext.Provider>\r\n  );\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/context/TaskContext.jsx b/src/context/TaskContext.jsx
--- a/src/context/TaskContext.jsx	
+++ b/src/context/TaskContext.jsx	
@@ -1,12 +1,15 @@
-import React, { useState, createContext } from 'react';
+import React, {useState, createContext} from 'react';
 
-export const TaskContext = createContext({ task: {}, setUser: () => {} });
+export const TaskContext = createContext({
+    task: {}, setUser: () => {
+    }
+});
 
-export const TaskContextProvider = ({ children }) => {
-  const [task, setTask] = useState({});
-  return (
-    <TaskContext.Provider value={{ task, setTask }}>
-      {children}
-    </TaskContext.Provider>
-  );
+export const TaskContextProvider = ({children}) => {
+    const [task, setTask] = useState({});
+    return (
+        <TaskContext.Provider value={{task, setTask}}>
+            {children}
+        </TaskContext.Provider>
+    );
 };
Index: src/apiCalls/task.calls.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import axios from \"axios\";\r\n\r\n\r\nexport const createTask = async (todo) => {\r\n    try {\r\n        const res = await axios.post(\"/api/todos/create\", todo);\r\n        return res;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const getTasks = async () => {\r\n    try {\r\n        const res = await axios.get(\"/api/todos\");\r\n        return res;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const getTask = async (id) => {\r\n    try {\r\n        const res = await axios.get(`/api/todos/${id}`);\r\n        return res;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\nexport const updateTask = async (id, todo) => {\r\n    try {\r\n        const res = await axios.put(`/api/todos/update/${id}`, todo);\r\n        return res;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}\r\n\r\n\r\nexport const deleteTask = async (id) => {\r\n    try {\r\n        const res = await axios.delete(`/api/todos/delete/${id}`);\r\n        return res;\r\n    } catch (err) {\r\n        return err;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/apiCalls/task.calls.js b/src/apiCalls/task.calls.js
--- a/src/apiCalls/task.calls.js	
+++ b/src/apiCalls/task.calls.js	
@@ -1,6 +1,5 @@
 import axios from "axios";
 
-
 export const createTask = async (todo) => {
     try {
         const res = await axios.post("/api/todos/create", todo);
@@ -19,8 +18,6 @@
     }
 }
 
-
-
 export const getTask = async (id) => {
     try {
         const res = await axios.get(`/api/todos/${id}`);
@@ -38,8 +35,6 @@
         return err;
     }
 }
-
-
 export const deleteTask = async (id) => {
     try {
         const res = await axios.delete(`/api/todos/delete/${id}`);
Index: src/components/Footer.jsx
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from 'react';\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer className=\"sticky top-[100vh] bg-black py-3 text-white flex items-center justify-between  \">\r\n      <h3>Made with ❤ and React </h3>\r\n    </footer>\r\n  );\r\n};\r\n
===================================================================
diff --git a/src/components/Footer.jsx b/src/components/Footer.jsx
--- a/src/components/Footer.jsx	
+++ b/src/components/Footer.jsx	
@@ -1,9 +1,9 @@
 import React from 'react';
 
 export const Footer = () => {
-  return (
-    <footer className="sticky top-[100vh] bg-black py-3 text-white flex items-center justify-between  ">
-      <h3>Made with ❤ and React </h3>
-    </footer>
-  );
+    return (
+        <footer className="sticky top-[100vh] bg-black py-3 text-white flex items-center justify-between  ">
+            <h3>Made with ❤ and React </h3>
+        </footer>
+    );
 };
